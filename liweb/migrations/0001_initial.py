# Generated by Django 2.2 on 2020-07-19 07:32
#复制于blog的0001_initial.py,没有自己生成

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('pid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'department',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FileInfo',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('file_type', models.CharField(blank=True, max_length=255, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'file_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('sponsor', models.IntegerField(blank=True, null=True)),
                ('time', models.DateTimeField(blank=True, null=True)),
                ('theme', models.CharField(blank=True, max_length=255, null=True)),
                ('place', models.CharField(blank=True, max_length=255, null=True)),
                ('ratifier_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'meeting',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MeetingAnswer',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('answer', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'meeting_answer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MeetingUserRelation',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('meeting_id', models.IntegerField(blank=True, null=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('answer_id', models.IntegerField(blank=True, null=True)),
                ('reason', models.CharField(blank=True, max_length=255, null=True)),
                ('answer', models.CharField(blank=True, max_length=255, null=True)),
                ('answer_remake', models.CharField(blank=True, max_length=255, null=True)),
                ('is_sign', models.IntegerField(blank=True, null=True)),
                ('time_sign', models.DateTimeField(blank=True, null=True)),
                ('place_sign', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'meeting_user_relation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ObserPartyRelation',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('observation_id', models.IntegerField(blank=True, null=True)),
                ('party_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'obser_party_relation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ObserRoleRelation',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('observation_id', models.IntegerField(blank=True, null=True)),
                ('role_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'obser_role_relation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ObservationList',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('observation_point', models.CharField(blank=True, max_length=255, null=True)),
                ('pid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'observation_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PartyBranch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('party_branch', models.CharField(blank=True, max_length=255, null=True)),
                ('pid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'party_branch',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PartyUserRelation',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('party_branch_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'party_user_relation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RespDepRelation',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('resp_id', models.IntegerField(blank=True, null=True)),
                ('department_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'resp_dep_relation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RespList',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('content', models.CharField(blank=True, max_length=255, null=True)),
                ('pid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'resp_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RespRoleRelation',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('resp_id', models.IntegerField(blank=True, null=True)),
                ('role_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'resp_role_relation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RoleInfo',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('role', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'role_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RoleUserRelation',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('role_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'role_user_relation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('content', models.CharField(blank=True, max_length=255, null=True)),
                ('pid', models.IntegerField(blank=True, null=True)),
                ('department_id', models.IntegerField(blank=True, null=True)),
                ('state_id', models.IntegerField(blank=True, null=True)),
                ('source_id', models.IntegerField(blank=True, null=True)),
                ('type_id', models.IntegerField(blank=True, null=True)),
                ('priority_id', models.IntegerField(blank=True, null=True)),
                ('progress', models.IntegerField(blank=True, null=True)),
                ('appointor_id', models.IntegerField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'task',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TaskAnnex',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('annex_url', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'task_annex',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TaskJurisdiction',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('department_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'task_jurisdiction',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TaskMessRecord',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('task_id', models.IntegerField(blank=True, null=True)),
                ('oper_user_id', models.IntegerField(blank=True, null=True)),
                ('noti_user_id', models.IntegerField(blank=True, null=True)),
                ('time', models.DateTimeField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'task_mess_record',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TaskPriority',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('priority', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'task_priority',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TaskProgRecord',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('task_id', models.IntegerField(blank=True, null=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('progress_type_id', models.IntegerField(blank=True, null=True)),
                ('time', models.DateTimeField(blank=True, null=True)),
                ('annex_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'task_prog_record',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TaskSource',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('source', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'task_source',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TaskState',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'task_state',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TaskType',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'task_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TaskUserRelation',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('task_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'task_user_relation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('department_id', models.IntegerField(blank=True, null=True)),
                ('user_name', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('job_id', models.IntegerField(blank=True, null=True)),
                ('is_ratifier', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_info',
                'managed': False,
            },
        ),
    ]
